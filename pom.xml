<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.balena.drones</groupId>
	<artifactId>balena-drones</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Balena Drones Tracker</name>

	<developers>
		<developer>
			<id>mhs</id>
			<name>Michal H. Siemaszko</name>
			<email>mhs@into.software</email>
			<organization>Ideas Into Software</organization>
			<organizationUrl>https://ideas.into.software/</organizationUrl>
		</developer>
	</developers>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<bnd.version>4.1.0</bnd.version>
		<osgi.enroute.version>7.0.1-SNAPSHOT</osgi.enroute.version>
		<slf4j-api.version>1.7.25</slf4j-api.version>
		<json-api.version>2.9.0</json-api.version>
		<johnzon.version>1.1.0</johnzon.version>
		<geocalc.version>0.5.7</geocalc.version>
		<k8-maven.version>1.0.6</k8-maven.version>
	</properties>

	<repositories>
		<repository>
			<id>OSGi</id>
			<name>OSGi public binaries</name>
			<url>https://oss.sonatype.org/content/groups/osgi</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>OSGi2</id>
			<name>OSGi public binaries</name>
			<url>https://oss.sonatype.org/content/repositories/osgi-releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>OSGi Snapshots</id>
			<name>OSGi public snapshot binaries</name>
			<url>https://oss.sonatype.org/content/repositories/osgi-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Snapshots</id>
			<url>https://repository.apache.org/content/groups/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Bnd Snapshots</id>
			<name>Bnd Latest build</name>
			<url>https://bndtools.ci.cloudbees.com/job/bnd.master/lastSuccessfulBuild/artifact/dist/bundles/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>Bnd Snapshots2</id>
			<name>Bnd Latest build</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>osgi-api</artifactId>
				<version>${osgi.enroute.version}</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>enterprise-api</artifactId>
				<version>${osgi.enroute.version}</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>impl-index</artifactId>
				<version>${osgi.enroute.version}</version>
				<type>pom</type>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>debug-bundles</artifactId>
				<version>${osgi.enroute.version}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>test-bundles</artifactId>
				<version>${osgi.enroute.version}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Use the bnd-maven-plugin and assemble the symbolic names -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<bnd><![CDATA[
Bundle-SymbolicName: ${project.groupId}.${project.artifactId}
-sources: true
-contract: *
]]></bnd>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>bnd-process</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Required to make the maven-jar-plugin pick up the bnd generated 
					manifest. Also avoid packaging empty Jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>

				<!-- Setup the indexer for running and testing -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-indexer-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<localURLs>REQUIRED</localURLs>
						<attach>false</attach>
					</configuration>
					<executions>
						<execution>
							<id>index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId}</indexName>
							</configuration>
						</execution>
						<execution>
							<id>test-index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId}</indexName>
								<outputFile>${project.build.directory}/test-index.xml</outputFile>
								<scopes>
									<scope>test</scope>
								</scopes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the resolver plugin we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-resolver-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnChanges>false</failOnChanges>
						<bndruns>
						</bndruns>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>resolve</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the export plugin we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-export-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<!-- this element ('configuration') is missing in OSGi enroute examples 
						TODO: remove this line if not needed.. -->
					<configuration>
						<resolve>true</resolve>
						<failOnChanges>true</failOnChanges>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>export</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the testing plugin that we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-testing-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>testing</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the baseline plugin we use and avoid failing 
					when no baseline jar exists. (for example before the first release) -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-baseline-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnMissing>false</failOnMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>baseline</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>common-dto</module>
		<module>service-dronesim-api</module>
		<module>service-dronesim-impl</module>
		<module>rest-dronesim</module>
		<module>rest-dronesim-intest</module>
		<module>dronesim-app</module>
	</modules>

	<profiles>
		<!-- build Docker image: mvn -P docker install -->
		<profile>
			<id>docker</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.github.deanjameseverett</groupId>
							<artifactId>k8-maven-plugin</artifactId>
							<version>${k8-maven.version}</version>
							<executions>
								<execution>
									<id>container</id>
									<phase>install</phase>
									<goals>
										<goal>deleteImage</goal>
										<goal>buildImage</goal>
									</goals>
									<configuration>
										<imageName>balena-${project.artifactId}</imageName>
										<imageVersion>latest</imageVersion>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>